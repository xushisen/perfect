<?xml version="1.0" encoding="UTF-8"?>    
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="com.xiaosen.dao.UserDao">  
<!--设置domain类和数据库中表的字段一一对应，注意数据库字段和domain类中的字段名称不致，此处一定要！-->  
    <resultMap id="BaseResultMap" type="com.xiaosen.entity.User">
        <id column="USER_ID" property="userId" jdbcType="INTEGER" />
        <result column="USER_NAME" property="userName" jdbcType="CHAR" />
        <result column="USER_PASSWORD" property="userPassword" jdbcType="CHAR" />
        <result column="USER_EMAIL" property="userEmail" jdbcType="CHAR" />
    </resultMap>  
    <!-- 查询单条记录 -->  
    <select id="selectUserById" parameterType="java.util.Map" resultMap="BaseResultMap">  
        SELECT * FROM T_USER WHERE USER_NAME = #{name} and USER_PASSWORD = #{pwd}
    </select>
    
    <!-- list查询 -->
    <select id="getList"  parameterType="java.util.Map" resultMap="BaseResultMap">
   		SELECT * FROM T_USER
		<include refid="findWhere" />
    </select>
    
    <!-- where 条件 -->
    <sql id="findWhere">
		<where>
			<if test="userName != null and userName != ''">
				and USER_NAME LIKE CONCAT('%',#{userName},'%')
				<!--and USER_NAME = #{userName,jdbcType=VARCHAR}-->
			</if>
			<if test="userEmail != null and userEmail != ''">
				and USER_EMAIL = #{userEmail,jdbcType=VARCHAR}
			</if>
		</where>
	</sql>
	
	<!-- 新增 -->
	<insert id="save" parameterType="com.xiaosen.entity.User">
		INSERT INTO T_USER(user_name,user_password)
   		VALUES (#{userName},#{userPassword})
	</insert>
	
	<!-- 修改 -->
	<update id="update" parameterType="com.xiaosen.entity.User">
		UPDATE T_USER
		<set>
			<if test="userName!=null">user_name=#{userName,jdbcType=VARCHAR},</if>
			<if test="userPassword!=null">user_password=#{userPassword,jdbcType=VARCHAR},</if>
		</set>
		WHERE USER_ID = #{id,jdbcType=VARCHAR}
	</update>
	
	<!-- 删除 -->
	<delete id="deleteByIds" parameterType="java.lang.String">
		DELETE FROM T_USER WHERE USER_ID IN
		<foreach collection="array" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
</mapper> 